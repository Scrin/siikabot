---
description: General description of project
globs: *
alwaysApply: false
---
# Project description

This project (Siikabot) is a multi-purpoe Matrix (matrix.org) bot, written in Go and using PostgreSQL for database and deployed as a Docker image.

## General architecture

The bot behavior is mostly reactive, reacting to certain messages or other events, such as !commands. In addition there are some asyncronous features such as sending reminders, and externally triggered behavior through webooks. In general, each such command or webhook is considered a "self-contained feature", and should be located in its own package

## Code structure

- `./bot/` General bot logic, such as routing certain commands (messages) to their appropriate command handlers
- `./commands/` All command implementations, usually called from the bot package. A good reference is [ping.go](mdc:commands/ping/ping.go)
- `./db/` All database operations, such as queries, should be placed here. Queries should be organized such that each "feature" has it's own file. For example [queries_remind.go](mdc:db/queries_remind.go) is a good reference
- `./db/migrations/` All migration files for setting up tables and such to PostgreSQL. The migration files are executed during startup only if they have not been run yet
- `./llmtools/` All tools that a LLM AI can use. A good reference is [electricity_prices.go](mdc:llmtools/electricity_prices.go)
- `./matrix/` All communication with the matrix homeserver is abstracted here
- `./openrouter/` All communication with OpenRouter for AI usage